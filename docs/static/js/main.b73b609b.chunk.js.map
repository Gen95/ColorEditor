{"version":3,"sources":["storage/index.js","store/index.js","stub/index.js","store/actions.js","store/reducer.js","components/main-panel/index.jsx","components/color-picker-panel/index.jsx","components/color-picker/index.jsx","components/color-mod-switcher/index.jsx","components/buttons/index.jsx","components/button/index.jsx","components/color-list/index.jsx","components/field/index.jsx","index.js"],"names":["setStorage","key","value","localStorage","setItem","JSON","stringify","initialState","parse","getItem","getStorage","data","name","type","color","currentIndexItem","Context","createContext","state","useStore","useContext","dispatch","addColor","useCallback","payload","selectItem","setItemName","setItemType","updateItem","deleteItem","updateData","actions","index","newData","item","dataLength","length","filter","_","i","Math","min","reducer","action","act","update","newState","MainPanel","useReducer","Provider","class","className","ColorPickerPanel","React","useState","currentItem","setCurrentItem","currentColor","currentName","currentType","useEffect","document","body","style","backgroundColor","label","onChange","event","target","ColorPicker","hex","onChangeHex","onSave","onDelete","CustomPicker","hsl","hsv","onChangeComplete","styles","hue","height","position","marginTop","saturation","width","ColorModSwitcher","mod","setMod","rgbColor","useMemo","c","test","substring","split","r","join","g","b","Error","hexToRgbA","handleChangeRGB","newRGB","componentToHex","Number","toString","rgbToHex","max","active","onClick","Buttons","disabled","Button","children","props","ColorList","map","id","items","setItems","GridContext","sourceIndex","targetIndex","nextStateData","swap","console","log","GridDropZone","boxesPerRow","rowHeight","GridItem","handleSelectColor","Field","inputProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b73b609b.chunk.js","sourcesContent":["export const getStorage = (key) => {\r\n    if (!localStorage) return;\r\n    return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nexport const setStorage = (key, value) => {\r\n    if (!localStorage) return;\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n}","import { data } from 'stub';\r\nimport { getStorage } from 'storage';\r\nimport React, { createContext, useContext, useCallback } from 'react';\r\n\r\nexport const initialState = getStorage(\"state\") || {\r\n    data,\r\n    currentIndexItem: 0\r\n};\r\n\r\nexport const Context = createContext({state: initialState});\r\n\r\nexport const useStore = () => {\r\n    const {state, dispatch} = useContext(Context);\r\n    const addColor = useCallback((payload) => dispatch({type: \"addColor\", payload}), [dispatch]);\r\n    const selectItem = useCallback((payload) => dispatch({type: \"selectItem\", payload}), [dispatch]);\r\n    const setItemName = useCallback((payload) => dispatch({type: \"setItemName\", payload}), [dispatch]);\r\n    const setItemType = useCallback((payload) => dispatch({type: \"setItemType\", payload}), [dispatch]);\r\n    const updateItem = useCallback((payload) => dispatch({type: \"updateItem\", payload}), [dispatch]);\r\n    const deleteItem = useCallback((payload) => dispatch({type: \"deleteItem\", payload}), [dispatch]);\r\n    const updateData = useCallback((payload) => dispatch({type: \"updateData\", payload}), [dispatch]);\r\n\r\n    return {state, addColor, selectItem, setItemName, setItemType, updateItem, deleteItem, updateData};\r\n};","export const data = [\r\n    {\r\n        name: \"name1\",\r\n        type: \"main\",\r\n        color: \"#f4f4f4\"\r\n    }, {\r\n        name: \"name2\",\r\n        type: \"side\",\r\n        color: \"#f8f8f8\"\r\n    }, {\r\n        name: \"red\",\r\n        type: \"red\",\r\n        color: \"#ff0000\"\r\n    }, {\r\n        name: \"blue\",\r\n        type: \"red\",\r\n        color: \"#00ff00\"\r\n    }, {\r\n        name: \"yellow\",\r\n        type: \"red\",\r\n        color: \"#0000ff\"\r\n    }\r\n];","export const actions = {\r\n    addColor: (state, payload) => {\r\n        return {data: [...state.data, payload]};\r\n    },\r\n    selectItem: (state, payload) => {\r\n        return {currentIndexItem: payload};\r\n    }, \r\n    setItemName: (state, {name, index}) => {\r\n        const newData = [...state.data];\r\n        newData[index].name = name;\r\n\r\n        return {data: newData};\r\n    },\r\n    setItemType: (state, {type, index}) => {\r\n        const newData = [...state.data];\r\n        newData[index].type = type;\r\n\r\n        return {data: newData};\r\n    },\r\n    updateItem: (state, {item, index}) => {\r\n        const newData = [...state.data];\r\n        newData[index] = item;\r\n\r\n        return {data: newData};\r\n    },\r\n    deleteItem: (state, index) => {\r\n        const dataLength = state.data.length;\r\n\r\n        return {\r\n            data: state.data.filter((_, i) => i !== index), \r\n            currentIndexItem: Math.min(dataLength - 2, state.currentIndexItem)\r\n        }\r\n    },\r\n    updateData: (state, payload) => {\r\n        return {data: payload};\r\n    }\r\n};","import { initialState } from 'store';\r\nimport { setStorage } from 'storage';\r\nimport { actions } from 'store/actions';\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    const act = actions[action.type];\r\n    const update = act(state, action.payload);\r\n    const newState = {...state, ...update};\r\n    setStorage(\"state\", newState);\r\n    return newState;\r\n}","import React, { useReducer } from 'react';\r\nimport { ColorPickerPanel, ColorList } from 'components';\r\nimport { Context, initialState } from 'store';\r\nimport { reducer } from 'store/reducer';\r\n\r\nimport './styles.scss'\r\n\r\nexport const MainPanel = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <Context.Provider value={{dispatch, state}}>\r\n            <div class=\"main-panel\">\r\n                <div className=\"main-panel__col\">\r\n                    <ColorPickerPanel />\r\n                </div>\r\n                <div className=\"main-panel__col\">\r\n                    <ColorList />\r\n                </div>\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport { useStore } from 'store';\r\nimport { ColorModSwitcher, Buttons, ColorPicker, Field } from '../';\r\n\r\nimport './styles.scss'\r\n\r\nexport const ColorPickerPanel = () => {\r\n    const { state: {data, currentIndexItem }, updateItem, deleteItem } = useStore();\r\n    const [currentItem, setCurrentItem] = React.useState(data[currentIndexItem]);\r\n    const { color: currentColor, name: currentName, type: currentType } = currentItem || {};\r\n    React.useEffect(() => {document.body.style.backgroundColor = currentColor}, [currentColor]);\r\n    React.useEffect(() => {setCurrentItem(data[currentIndexItem])}, [currentIndexItem, data]);\r\n\r\n    const handleChangeName = (event) => {\r\n        setCurrentItem({...currentItem, name: event.target.value});\r\n    }\r\n\r\n    const handleChangeType = (event) => {\r\n        setCurrentItem({...currentItem, type: event.target.value});\r\n    }\r\n\r\n    const handleChangeColor = ({hex}) => {\r\n        document.body.style.backgroundColor = hex;\r\n        setCurrentItem({...currentItem, color: hex});\r\n    }\r\n\r\n    const handleSave = () => {\r\n        updateItem({item: currentItem, index: currentIndexItem});\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteItem(currentIndexItem);\r\n    }\r\n\r\n    const handleChangeHex = (hex) => {\r\n        setCurrentItem({...currentItem, color: hex});\r\n    }\r\n    \r\n    return (\r\n        <div className=\"color-picker-panel\">\r\n            <div className=\"color-picker-panel__fields\">\r\n                <div className=\"color-picker-panel__field\">\r\n                    <Field label=\"Name:\" type=\"text\" value={currentName} onChange={handleChangeName}/>\r\n                </div>\r\n                <div className=\"color-picker-panel__field\">\r\n                    <Field label=\"Type:\" type=\"text\" value={currentType} onChange={handleChangeType}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"color-picker-panel__color-picker\">\r\n                <ColorPicker color={currentColor} onChange={handleChangeColor}/>\r\n            </div>\r\n            <div className=\"color-picker-panel__fields\">\r\n                <ColorModSwitcher currentItem={currentItem} onChangeHex={handleChangeHex}/>\r\n            </div>\r\n            <div className=\"color-picker-panel__controls\">\r\n                <Buttons onSave={handleSave} onDelete={handleDelete}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { CustomPicker } from 'react-color';\r\nimport { Hue, Saturation } from 'react-color/lib/components/common';\r\n\r\nimport './styles.scss'\r\n\r\nexport const ColorPicker = CustomPicker(({ hex, hsl, hsv, onChange, onChangeComplete }) => {\r\n    const styles = {\r\n        hue: {\r\n            height: 10,\r\n            position: \"relative\",\r\n            marginTop: 8\r\n        }, \r\n        saturation: {\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: 200,\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div style={styles.saturation}>\r\n                <Saturation hsl={hsl} hsv={hsv} onChange={onChange} onChangeComplete={onChangeComplete}/>\r\n            </div>\r\n            <div style={styles.hue}>\r\n                <Hue hsl={hsl} onChange={onChange}/>\r\n            </div>\r\n        </>\r\n    )\r\n})","import React from 'react';\r\nimport { Field, Button } from 'components';\r\n\r\nimport './styles.scss'\r\n\r\nexport const ColorModSwitcher = ({currentItem, onChangeHex}) => {\r\n    // RGB, HEX\r\n    const [mod, setMod] = React.useState(\"RGB\");\r\n      \r\n    const rgbToHex = ({r, g, b}) => {\r\n        const componentToHex = (c) => {\r\n            const hex = Number(c).toString(16);\r\n            return hex.length == 1 ? \"0\" + hex : hex;\r\n        }\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    }\r\n\r\n    const hexToRgbA = (hex) => {\r\n        let c;\r\n        if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\r\n            c= hex.substring(1).split('');\r\n            if(c.length== 3){\r\n                c= [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n            }\r\n            c= '0x'+c.join('');\r\n            return {\r\n                r: (c>>16)&255,\r\n                g: (c>>8)&255,\r\n                b: c&255\r\n            };\r\n        }\r\n        throw new Error('Bad Hex');\r\n    }\r\n    \r\n    const rgbColor = React.useMemo(() => hexToRgbA(currentItem.color), [currentItem.color]);\r\n\r\n    const handleChangeRGB = (newRGB) => {\r\n        onChangeHex(rgbToHex({...rgbColor, ...newRGB}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"color-mod-switcher\">\r\n            {mod === \"HEX\" && <Field label=\"HEX:\" type=\"text\" value={currentItem.color} onChange={(event) => {onChangeHex(event.target.value)}}/>}\r\n            {mod === \"RGB\" && <div className=\"color-mod-switcher__fields\">\r\n                <Field width={47} label=\"R:\" type=\"number\" max=\"255\" min=\"0\" value={rgbColor.r} onChange={(event) => {handleChangeRGB({r: event.target.value})}}/>\r\n                <Field width={47} label=\"G:\" type=\"number\" max=\"255\" min=\"0\" value={rgbColor.g} onChange={(event) => {handleChangeRGB({g: event.target.value})}}/>\r\n                <Field width={47} label=\"B:\" type=\"number\" max=\"255\" min=\"0\" value={rgbColor.b} onChange={(event) => {handleChangeRGB({b: event.target.value})}}/>\r\n            </div>}\r\n            <div className=\"color-mod-switcher__tabs\">\r\n                <Button active={mod === \"RGB\"} onClick={() => {setMod(\"RGB\")}}>RGBa</Button>\r\n                <Button active={mod === \"HEX\"} onClick={() => {setMod(\"HEX\")}}>HEX</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from 'components';\r\nimport { useStore } from 'store';\r\n\r\nimport './styles.scss'\r\n\r\nexport const Buttons = ({onSave, onDelete}) => {\r\n    const { state: {data}} = useStore();\r\n\r\n    return (\r\n        <div className=\"buttons\">\r\n            <Button onClick={onSave}>Save</Button>\r\n            <Button onClick={onDelete} disabled={data.length === 1}>Delete</Button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './styles.scss'\r\n\r\nexport const Button = ({active, children, ...props}) => {\r\n\r\n    return (\r\n        <button \r\n        type=\"button\" \r\n        {...props} \r\n        className={ active ? \"button button_active\" : \"button\" }>\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport { useStore } from \"store\";\r\nimport { Button } from \"components\";\r\nimport {\r\n  GridContextProvider,\r\n  GridDropZone,\r\n  GridItem,\r\n  swap,\r\n} from \"react-grid-dnd\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport const ColorList = () => {\r\n  const {\r\n    state: { data, currentIndexItem },\r\n    addColor,\r\n    selectItem,\r\n    updateData,\r\n  } = useStore();\r\n\r\n  const [items, setItems] = React.useState(\r\n    data.map((item, index) => ({ ...item, id: index }))\r\n  );\r\n//   const [idMap, setIdMap] = React.useState({});\r\n//   React.useEffect(()=>{\r\n//     updateData(items);\r\n\r\n//     // setItems(data.map((item, index) => ({ ...item, id: idMap[index] })))\r\n//   }, [items]);\r\n\r\n  React.useEffect(()=>{\r\n    setItems(data.map((item, index) => ({ ...item, id: index })))\r\n  }, [data])\r\n\r\n\r\n  const handleAddColor = () => {\r\n    addColor({\r\n      name: \"name\",\r\n      type: \"main\",\r\n      color: \"#000000\",\r\n    });\r\n  };\r\n\r\n  const handleSelectColor = (index) => {\r\n    selectItem(index);\r\n  };\r\n\r\n  function onChange(_, sourceIndex, targetIndex) {\r\n    const nextStateData = swap(items, sourceIndex, targetIndex);\r\n    console.log(\"SourceIndex\", sourceIndex);\r\n    console.log(\"tARGETiNDEX\", targetIndex);\r\n    console.log(\"CurrentItemIndex\", currentIndexItem);\r\n    console.log(\"nextStateData\", nextStateData);\r\n\r\n    // setIdMap(newIdMap);\r\n    setItems(nextStateData);\r\n    updateData(nextStateData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"color-list\">\r\n      <GridContextProvider onChange={onChange}>\r\n        <div className=\"color-list__container\">\r\n          <GridDropZone\r\n            className=\"color-list__GridDropZone\"\r\n            id=\"items\"\r\n            boxesPerRow={5}\r\n            rowHeight={60}\r\n            style={{ height: \"403px\" }}\r\n          >\r\n            {items.map((item, index) => (\r\n              <GridItem key={item.id}>\r\n                <div\r\n                  className={\r\n                    index === currentIndexItem ? \"item active\" : \"item\"\r\n                  }\r\n                  style={{ backgroundColor: item.color }}\r\n                  onClick={() => {\r\n                    handleSelectColor(index);\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            ))}\r\n          </GridDropZone>\r\n        </div>\r\n      </GridContextProvider>\r\n\r\n      <div className=\"color-list__add\">\r\n        <Button onClick={handleAddColor}>Add</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './styles.scss'\r\n\r\nexport const Field = (props) => {\r\n\r\n    const {label, width, ...inputProps} = props;\r\n\r\n    return (\r\n    <label className=\"field\">\r\n        <div className=\"field__label\">{label}</div>\r\n        <input {...inputProps} style={{width}} className=\"field__input\" />\r\n    </label>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport { MainPanel } from './components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPanel />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}