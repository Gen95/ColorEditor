{"version":3,"sources":["stub/index.js","storage/index.js","store/index.js","store/actions.js","store/reducer.js","components/main-panel/index.jsx","components/color-picker-panel/index.jsx","components/color-picker/index.jsx","components/color-mod-switcher/index.jsx","components/buttons/index.jsx","components/button/index.jsx","components/color-list/index.jsx","components/field/index.jsx","index.js"],"names":["data","id","name","type","color","setStorage","key","value","localStorage","setItem","JSON","stringify","initialState","parse","getItem","getStorage","selectIdItem","maxID","length","Context","createContext","state","useStore","useContext","dispatch","addColor","useCallback","payload","selectItem","setItemName","setItemType","updateItem","deleteItem","updateData","actions","item","map","newItem","currentIndex","dataLength","newData","filter","index","Math","min","reducer","action","act","update","newState","MainPanel","useReducer","Provider","className","ColorPickerPanel","React","useState","find","currentItem","setCurrentItem","currentColor","currentName","currentType","useEffect","document","body","style","backgroundColor","label","onChange","event","target","ColorPicker","hex","onChangeHex","onSave","onDelete","CustomPicker","hsl","hsv","onChangeComplete","styles","hue","height","position","marginTop","saturation","width","ColorModSwitcher","mod","setMod","rgbColor","useMemo","c","test","substring","split","r","join","g","b","sr","toFixed","sg","sb","hexToRgbA","handleChangeRGB","newRGB","componentToHex","Number","toString","rgbToHex","handleChangeSRGB","round","srgbToHex","handleFocus","select","max","step","onFocus","active","onClick","Buttons","disabled","Button","children","props","ColorList","GridContext","_","sourceIndex","targetIndex","nextStateData","swap","GridDropZone","boxesPerRow","rowHeight","GridItem","Field","inputProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c3a2744.chunk.js","sourcesContent":["export const data = [\r\n    {\r\n        id: 0,\r\n        name: \"name1\",\r\n        type: \"main\",\r\n        color: \"#f4f4f4\"\r\n    }, {\r\n        id: 1,\r\n        name: \"name2\",\r\n        type: \"side\",\r\n        color: \"#f8f8f8\"\r\n    }, {\r\n        id: 2,\r\n        name: \"red\",\r\n        type: \"red\",\r\n        color: \"#ff0000\"\r\n    }, {\r\n        id: 3,\r\n        name: \"blue\",\r\n        type: \"red\",\r\n        color: \"#00ff00\"\r\n    }, {\r\n        id: 4,\r\n        name: \"yellow\",\r\n        type: \"red\",\r\n        color: \"#0000ff\"\r\n    }\r\n];","export const getStorage = (key) => {\r\n    if (!localStorage) return;\r\n    return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nexport const setStorage = (key, value) => {\r\n    if (!localStorage) return;\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n}","import { data } from 'stub';\r\nimport { getStorage } from 'storage';\r\nimport React, { createContext, useContext, useCallback } from 'react';\r\n\r\nexport const initialState = getStorage(\"state\") || {\r\n    data,\r\n    selectIdItem: 0,\r\n    maxID: data.length,\r\n};\r\n\r\nexport const Context = createContext({state: initialState});\r\n\r\nexport const useStore = () => {\r\n    const {state, dispatch} = useContext(Context);\r\n    const addColor = useCallback((payload) => dispatch({type: \"addColor\", payload}), [dispatch]);\r\n    const selectItem = useCallback((payload) => dispatch({type: \"selectItem\", payload}), [dispatch]);\r\n    const setItemName = useCallback((payload) => dispatch({type: \"setItemName\", payload}), [dispatch]);\r\n    const setItemType = useCallback((payload) => dispatch({type: \"setItemType\", payload}), [dispatch]);\r\n    const updateItem = useCallback((payload) => dispatch({type: \"updateItem\", payload}), [dispatch]);\r\n    const deleteItem = useCallback((payload) => dispatch({type: \"deleteItem\", payload}), [dispatch]);\r\n    const updateData = useCallback((payload) => dispatch({type: \"updateData\", payload}), [dispatch]);\r\n\r\n    return {state, addColor, selectItem, setItemName, setItemType, updateItem, deleteItem, updateData};\r\n};","export const actions = {\r\n    addColor: (state, payload) => {\r\n        const id = state.maxID + 1;\r\n        const item = { ...payload, id };\r\n\r\n        return { data: [...state.data, item], maxID: id };\r\n    },\r\n    selectItem: (state, payload) => {\r\n        return { selectIdItem: payload };\r\n    },\r\n    setItemName: (state, { name, id }) => {\r\n        const newData = [...state.data]\r\n            .map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, name }\r\n                }\r\n                return item;\r\n            });\r\n\r\n        return { data: newData };\r\n    },\r\n    setItemType: (state, { type, id }) => {\r\n        const newData = [...state.data]\r\n            .map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, type }\r\n                }\r\n                return item;\r\n            });\r\n\r\n        return { data: newData };\r\n    },\r\n    updateItem: (state, { item: newItem, id }) => {\r\n        const newData = [...state.data]\r\n            .map((item) => {\r\n                if (item.id === id) {\r\n                    return newItem\r\n                }\r\n                return item;\r\n            });\r\n\r\n        return { data: newData };\r\n    },\r\n    deleteItem: (state, id) => {\r\n        let currentIndex;\r\n        const dataLength = state.data.length;\r\n        const newData = state.data.filter((item, index) => {\r\n            if(item.id !== id) {\r\n                currentIndex = index;\r\n                return true;\r\n            }\r\n        });\r\n\r\n        currentIndex = Math.min(currentIndex, dataLength - 1);\r\n\r\n        return {\r\n            data: newData,\r\n            selectIdItem: state.data[currentIndex].id\r\n        }\r\n    },\r\n    updateData: (state, payload) => {\r\n        return { data: payload };\r\n    }\r\n};","import { initialState } from 'store';\r\nimport { setStorage } from 'storage';\r\nimport { actions } from 'store/actions';\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    const act = actions[action.type];\r\n    const update = act(state, action.payload);\r\n    const newState = {...state, ...update};\r\n    setStorage(\"state\", newState);\r\n    \r\n    return newState;\r\n}","import React, { useReducer } from 'react';\r\nimport { ColorPickerPanel, ColorList } from 'components';\r\nimport { Context, initialState } from 'store';\r\nimport { reducer } from 'store/reducer';\r\n\r\nimport './styles.scss'\r\n\r\nexport const MainPanel = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <Context.Provider value={{dispatch, state}}>\r\n            <div className=\"main-panel\">\r\n                <div className=\"main-panel__col\">\r\n                    <ColorPickerPanel />\r\n                </div>\r\n                <div className=\"main-panel__col\">\r\n                    <ColorList />\r\n                </div>\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport { useStore } from 'store';\r\nimport { ColorModSwitcher, Buttons, ColorPicker, Field } from '../';\r\n\r\nimport './styles.scss'\r\n\r\nexport const ColorPickerPanel = () => {\r\n    const { state: {data, selectIdItem }, updateItem, deleteItem } = useStore();\r\n    const [currentItem, setCurrentItem] = React.useState(data.find(({id}) => id === selectIdItem) || data[0]);\r\n    const { color: currentColor, name: currentName, type: currentType } = currentItem || {};\r\n\r\n    React.useEffect(() => {document.body.style.backgroundColor = currentColor}, [currentColor]);\r\n    React.useEffect(() => {setCurrentItem(data.find(({id}) => id === selectIdItem) || data[0])}, [selectIdItem, data]);\r\n\r\n    const handleChangeName = (event) => {\r\n        setCurrentItem({...currentItem, name: event.target.value});\r\n    }\r\n\r\n    const handleChangeType = (event) => {\r\n        setCurrentItem({...currentItem, type: event.target.value});\r\n    }\r\n\r\n    const handleChangeColor = ({hex}) => {\r\n        document.body.style.backgroundColor = hex;\r\n        setCurrentItem({...currentItem, color: hex});\r\n    }\r\n\r\n    const handleSave = () => {\r\n        updateItem({item: currentItem, id: selectIdItem});\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        deleteItem(selectIdItem);\r\n    }\r\n\r\n    const handleChangeHex = (hex) => {\r\n        if(hex.length > 7) {\r\n            return\r\n        };\r\n        \r\n        setCurrentItem({...currentItem, color: hex});\r\n    }\r\n    \r\n    return (\r\n        <div className=\"color-picker-panel\">\r\n            <div className=\"color-picker-panel__fields\">\r\n                <div className=\"color-picker-panel__field\">\r\n                    <Field label=\"Name:\" type=\"text\" value={currentName} onChange={handleChangeName}/>\r\n                </div>\r\n                <div className=\"color-picker-panel__field\">\r\n                    <Field label=\"Type:\" type=\"text\" value={currentType} onChange={handleChangeType}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"color-picker-panel__color-picker\">\r\n                <ColorPicker color={currentColor} onChange={handleChangeColor}/>\r\n            </div>\r\n            <div className=\"color-picker-panel__fields\">\r\n                <ColorModSwitcher currentItem={currentItem} onChangeHex={handleChangeHex}/>\r\n            </div>\r\n            <div className=\"color-picker-panel__controls\">\r\n                <Buttons onSave={handleSave} onDelete={handleDelete}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { CustomPicker } from 'react-color';\r\nimport { Hue, Saturation } from 'react-color/lib/components/common';\r\n\r\nimport './styles.scss'\r\n\r\nexport const ColorPicker = CustomPicker(({ hex, hsl, hsv, onChange, onChangeComplete }) => {\r\n    const styles = {\r\n        hue: {\r\n            height: 10,\r\n            position: \"relative\",\r\n            marginTop: 8\r\n        }, \r\n        saturation: {\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: 200,\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div style={styles.saturation}>\r\n                <Saturation hsl={hsl} hsv={hsv} onChange={onChange} onChangeComplete={onChangeComplete}/>\r\n            </div>\r\n            <div style={styles.hue}>\r\n                <Hue hsl={hsl} onChange={onChange}/>\r\n            </div>\r\n        </>\r\n    )\r\n})","import React from 'react';\r\nimport { Field, Button } from 'components';\r\n\r\nimport './styles.scss'\r\n\r\nexport const ColorModSwitcher = ({currentItem, onChangeHex}) => {\r\n    // RGB, sRGB, HEX\r\n    const [mod, setMod] = React.useState(\"RGB\");\r\n      \r\n    const rgbToHex = ({r, g, b}) => {\r\n        const componentToHex = (c) => {\r\n            const hex = Number(c).toString(16);\r\n            return hex.length == 1 ? \"0\" + hex : hex;\r\n        }\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    }\r\n\r\n    const srgbToHex = ({sr, sg, sb}) => {\r\n        const componentToHex = (c) => {\r\n            const hex = Math.round(Number(c * 255)).toString(16);\r\n            return hex.length == 1 ? \"0\" + hex : hex;\r\n        }\r\n        return \"#\" + componentToHex(sr) + componentToHex(sg) + componentToHex(sb);\r\n    }\r\n\r\n    const hexToRgbA = (hex) => {\r\n        let c;\r\n        if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\r\n            c= hex.substring(1).split('');\r\n            if(c.length == 3){\r\n                c= [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n            }\r\n            c= '0x'+c.join('');\r\n            return {\r\n                r: (c>>16)&255,\r\n                g: (c>>8)&255,\r\n                b: c&255,\r\n                sr: (((c>>16)&255) / 255).toFixed(2),\r\n                sg: (((c>>8)&255) / 255).toFixed(2),\r\n                sb: ((c&255) / 255).toFixed(2)\r\n            };\r\n        }\r\n    }\r\n    \r\n    const rgbColor = React.useMemo(() => hexToRgbA(currentItem.color), [currentItem.color]);\r\n\r\n    const handleChangeRGB = (newRGB) => {\r\n        onChangeHex(rgbToHex({...rgbColor, ...newRGB}));\r\n    }\r\n\r\n    const handleChangeSRGB = (newRGB) => {\r\n        onChangeHex(srgbToHex({...rgbColor, ...newRGB}));\r\n    }\r\n\r\n    const handleFocus = (event) => {\r\n        event.target.select();\r\n    }\r\n\r\n    return (\r\n        <div className=\"color-mod-switcher\">\r\n            {mod === \"HEX\" && <Field label=\"HEX:\" type=\"text\" value={currentItem.color} onChange={(event) => {onChangeHex(event.target.value)}}/>}\r\n            {mod === \"RGB\" && <div className=\"color-mod-switcher__fields\">\r\n                <Field width={47} label=\"R:\" type=\"number\" max=\"255\" min=\"0\" value={rgbColor.r} onChange={(event) => {handleChangeRGB({r: event.target.value})}}/>\r\n                <Field width={47} label=\"G:\" type=\"number\" max=\"255\" min=\"0\" value={rgbColor.g} onChange={(event) => {handleChangeRGB({g: event.target.value})}}/>\r\n                <Field width={47} label=\"B:\" type=\"number\" max=\"255\" min=\"0\" value={rgbColor.b} onChange={(event) => {handleChangeRGB({b: event.target.value})}}/>\r\n            </div>}\r\n            {mod === \"sRGB\" && <div className=\"color-mod-switcher__fields\">\r\n                <Field width={47} step=\"0.01\" label=\"R:\" type=\"number\" max=\"1\" min=\"0\" value={rgbColor.sr} onFocus={handleFocus} onChange={(event) => {handleChangeSRGB({sr: event.target.value})}}/>\r\n                <Field width={47} step=\"0.01\" label=\"G:\" type=\"number\" max=\"1\" min=\"0\" value={rgbColor.sg} onFocus={handleFocus} onChange={(event) => {handleChangeSRGB({sg: event.target.value})}}/>\r\n                <Field width={47} step=\"0.01\" label=\"B:\" type=\"number\" max=\"1\" min=\"0\" value={rgbColor.sb} onFocus={handleFocus} onChange={(event) => {handleChangeSRGB({sb: event.target.value})}}/>\r\n            </div>}\r\n            <div className=\"color-mod-switcher__tabs\">\r\n                <Button active={mod === \"RGB\"} onClick={() => {setMod(\"RGB\")}}>RGB</Button>\r\n                <Button active={mod === \"sRGB\"} onClick={() => {setMod(\"sRGB\")}}>sRGB</Button>\r\n                <Button active={mod === \"HEX\"} onClick={() => {setMod(\"HEX\")}}>HEX</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from 'components';\r\nimport { useStore } from 'store';\r\n\r\nimport './styles.scss'\r\n\r\nexport const Buttons = ({onSave, onDelete}) => {\r\n    const { state: {data}} = useStore();\r\n\r\n    return (\r\n        <div className=\"buttons\">\r\n            <Button onClick={onSave}>Save</Button>\r\n            <Button onClick={onDelete} disabled={data.length === 1}>Delete</Button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './styles.scss'\r\n\r\nexport const Button = ({active, children, ...props}) => {\r\n\r\n    return (\r\n        <button \r\n        type=\"button\" \r\n        {...props} \r\n        className={ active ? \"button button_active\" : \"button\" }>\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport { useStore } from \"store\";\r\nimport { Button } from \"components\";\r\nimport {\r\n  GridContextProvider,\r\n  GridDropZone,\r\n  GridItem,\r\n  swap,\r\n} from \"react-grid-dnd\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport const ColorList = () => {\r\n  const {\r\n    state: { data, selectIdItem },\r\n    addColor,\r\n    selectItem,\r\n    updateData,\r\n  } = useStore();\r\n\r\n  const handleAddColor = () => {\r\n    addColor({\r\n      name: \"name\",\r\n      type: \"main\",\r\n      color: \"#000000\",\r\n    });\r\n  };\r\n\r\n  const handleSelectColor = (id) => {\r\n    selectItem(id);\r\n  };\r\n\r\n  function onChange(_, sourceIndex, targetIndex) {\r\n    const nextStateData = swap(data, sourceIndex, targetIndex);\r\n\r\n    updateData(nextStateData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"color-list\">\r\n      <GridContextProvider onChange={onChange}>\r\n        <div className=\"color-list__container\">\r\n          <GridDropZone\r\n            className=\"color-list__GridDropZone\"\r\n            id=\"items\"\r\n            boxesPerRow={5}\r\n            rowHeight={60}\r\n          >\r\n            {data.map((item, index) => (\r\n              <GridItem key={item.id}>\r\n                <div\r\n                  className={\r\n                    item.id === selectIdItem ? \"item active\" : \"item\"\r\n                  }\r\n                  style={{ backgroundColor: item.color }}\r\n                  onClick={() => {\r\n                    handleSelectColor(item.id);\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            ))}\r\n          </GridDropZone>\r\n        </div>\r\n      </GridContextProvider>\r\n\r\n      <div className=\"color-list__add\">\r\n        <Button onClick={handleAddColor}>Add</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport './styles.scss'\r\n\r\nexport const Field = (props) => {\r\n\r\n    const {label, width, ...inputProps} = props;\r\n\r\n    return (\r\n    <label className=\"field\">\r\n        <div className=\"field__label\">{label}</div>\r\n        <input {...inputProps} style={{width}} className=\"field__input\" />\r\n    </label>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport { MainPanel } from './components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPanel />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}